@startuml

title Container Diagram

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

Person(User, "Пользователь", "Пользователь приложения")

Container(MobileApplication, "Mobile Application", , "Мобильное приложение")
Container(SmartHomeSystem, "Smart Home", "Java&PostgreSQL", "Приложение для экосистемы умных посёлков")

Container_Boundary(SmartHomeSystem, "Smart Home") {
    Container(ApiGateway, "API Gateway")

    Container(Kafka, "Kafka", "Apache Kafka")

    Container(AuthService, "Auth Service")
    Container(AuthServiceDatabase, "Auth Service Database", "PostgreSQL")
    
    Container(UserService, "User Service", "Java")
    Container(UserServiceDatabase, "User Service Database", "PostgreSQL")

    Container(TelemetryService, "Telemetry Service", "Java")
    Container(TelemetryServiceDatabase, "Telemetry Service Database", "PostgreSQL")

    Container(DeviceService, "Device Service", "Java")
    Container(DeviceServiceDatabase, "Device Service Database", "PostgreSQL")

    Container(ScenarioService, "Scenario Service", "Java")
    Container(ScenarioServiceDatabase, "Scenario Service Database", "PostgreSQL")
}

Container_Ext(Sensor, "Sensor")
Container_Ext(Device, "Device")

Rel(User, MobileApplication, "Использует приложение")
Rel(MobileApplication, ApiGateway, "Использует SmartHomeSystem", "REST API, HTTP")

Rel(ApiGateway, AuthService, "Запрос авторизации/аутентификации")
Rel(ApiGateway, UserService, "Управление пользователями")
Rel(ApiGateway, TelemetryService, "Управление данными телеметрии")
Rel(ApiGateway, DeviceService, "Управление устройствами")
Rel(ApiGateway, ScenarioService, "Управление сценариями")

Rel(DeviceService, Kafka, "Управление устройствами")

Rel(AuthService, AuthServiceDatabase, "Чтение и запись", "SQL/TCP")
Rel(UserService, UserServiceDatabase, "Чтение и запись", "SQL/TCP")
Rel(TelemetryService, TelemetryServiceDatabase, "Чтение и запись", "SQL/TCP")
Rel(DeviceService, DeviceServiceDatabase, "Чтение и запись", "SQL/TCP")
Rel(ScenarioService, ScenarioServiceDatabase, "Чтение и запись", "SQL/TCP")

Rel(Kafka, Sensor, "Запрашивает данные", "TCP")
Rel(Kafka, Device, "Управляет устройством", "TCP")

@enduml